version: 0.2
phases:
  install:
    runtime-versions:
      java: openjdk11
    commands:
      - yum install java-11-amazon-corretto-headless
      # - PYTHON=python2 amazon-linux-extras install java-openjdk11

      # copy files from CaliforniumSourceArtifact
      - cp -R $CODEBUILD_SRC_DIR_CaliforniumSourceArtifact/. ./root/

      # configure maven
      - wget https://dlcdn.apache.org/maven/maven-3/3.8.5/binaries/apache-maven-3.8.5-bin.tar.gz /tmp
      - tar xf /tmp/apache-maven-\*.tar.gz -C /opt
      - ln -s /opt/apache-maven-3.8.5 /opt/maven
      - cp ./root/maven.sh /etc/profile.d/maven.sh
      - chmod +x /etc/profile.d/maven.sh
      - source /etc/profile.d/maven.sh
      - cd root

      # Build jar
      - mvn clean install -DskipTests

  pre_build:
    commands:
      - ls root
      - echo Logging in to Docker Hub...
      - echo $DockerPassword | docker login --username $DockerUsername --password-stdin

  build:
    commands:
      # - npm test
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $ContainerName:latest --build-arg Environment .
      - docker tag $ContainerName:latest $EcrRepositoryUri:latest
      - echo Build completed on `date`

  post_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS  --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - echo Pushing the Docker image...
      - docker push $EcrRepositoryUri:latest
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $ContainerName $EcrRepositoryUri:latest > imagedefinitions.json

# artifacts:
#   type: zip
#   base-directory: root
#   files:
#     - "**/*"

artifacts:
  files:
    - "**/*"
  secondary-artifacts:
    ContainerBuildArtifact:
      files: imagedefinitions.json
    # ApiBuildArtifact:
    #   files:
    #     - "**/*"
    #   base-directory: root
