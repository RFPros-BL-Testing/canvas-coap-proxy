AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: single pipeline template for stack
Parameters:
  ApplicationName:
    Type: String
  ArtifactBucketName:
    Type: String
  BuildSpecPath:
    Type: String
    Default: buildspec.yml
  CodeBuildProjectRoleArn:
    Type: String
  Environment:
    Type: String
  KMSKeyArn:
    Type: String
  PipeLineRoleArn:
    Type: String
  ResourceGroup:
    Type: String
  ConnectionArn:
    Type: String
  FullRepositoryId:
    Type: String
  CaliforniumRepositoryId:
    Type: String
  Stack:
    Type: String
  ServiceName:
    Type: String
  ClusterName:
    Type: String
  EcrRepositoryUri:
    Type: String

Resources:
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${ApplicationName}-${Environment}
      ServiceRole: !Ref CodeBuildProjectRoleArn
      EncryptionKey: !Ref KMSKeyArn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        PrivilegedMode: true
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: Environment
            Value: !Ref Environment
          - Name: EcrRepositoryUri
            Value: !Ref EcrRepositoryUri
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: ContainerName
            Value: file-service-proxy
          - Name: DockerUsername
            Type: PARAMETER_STORE
            Value: !Sub /${Stack}-${Environment}/dockerhub/username
          - Name: DockerPassword
            Type: PARAMETER_STORE
            Value: !Sub /${Stack}-${Environment}/dockerhub/password
      Source:
        BuildSpec: !Ref BuildSpecPath
        Type: CODEPIPELINE
      Tags:
        - Key: ResourceGroup
          Value: !Ref ResourceGroup
      TimeoutInMinutes: 30

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !Ref PipeLineRoleArn
      Name: !Ref AWS::StackName
      Stages:
        - Name: Source
          Actions:
            - Name: Proxy
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: !Ref ConnectionArn
                FullRepositoryId: !Ref FullRepositoryId # some-user/my-repo
                BranchName: !Sub CCP-${Environment}
              OutputArtifacts:
                - Name: ProxySourceArtifact
              RunOrder: 1
            - Name: Api
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: !Ref ConnectionArn
                FullRepositoryId: !Ref CaliforniumRepositoryId # some-user/my-repo
                BranchName: !Sub cali-${Environment}
              OutputArtifacts:
                - Name: CaliforniumSourceArtifact
              RunOrder: 1

        - Name: BuildApis
          Actions:
            - Name: BuildApi
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
                PrimarySource: ProxySourceArtifact
              RunOrder: 1
              InputArtifacts:
                - Name: ProxySourceArtifact
                - Name: CaliforniumSourceArtifact
              OutputArtifacts:
                - Name: ContainerBuildArtifact

        - Name: Approval
          Actions:
            - Name: ApproveDeploy
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual

        - Name: Deploy
          Actions:
            - Name: DeployTask
              InputArtifacts:
                - Name: ContainerBuildArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ECS
              Configuration:
                ClusterName: !Ref ClusterName
                ServiceName: !Ref ServiceName
                FileName: "imagedefinitions.json"
              RunOrder: 1

      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucketName
        EncryptionKey:
          Id: !Ref KMSKeyArn
          Type: KMS
